@model MyChat.Models.Room
@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>
    <span style="text-decoration-line: underline;">@User.Identity?.Name</span>, welcome to the room "<span style="text-decoration-line: underline;">@Model?.Name</span>"
</h2>

@*@if(User.Identity.IsAuthenticated){
<vc:room></vc:room>
}*@
<div class="chat">
    <div class="chat-body">
        @foreach (var message in @Model!.Messages)
        {
            <div class="message">
                <header>@message.Name:</header>
                <p>@message.Text</p>
                <footer>@message.When</footer>
            </div>
        }
    </div>

    <form asp-action="Send" method="post" asp-controller="Rooms" class="chat-input">
        <input type="hidden" name="roomId" id="roomId" value="@Model.Id">
        <input type="hidden" name="roomName" id="roomName" value="@Model.Name">
        <input type="text" class="text-dark " name="message" id="message" required="required">
        <button type="submit" class="btn-dark send-button" name="sendButton" id="sendButton">Send</button>
    </form>

</div>
@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        //Disable the send button until connection is established.
        document.getElementById("sendButton").disabled = true;
        
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();
        
        connection.on("ReceiveMessage", function (data){
            let message = document.createElement("div")
            message.classList.add('message')
            
            let header = document.createElement("header")
            header.appendChild(document.createTextNode('name'))
            
            let p = document.createElement("p")
            p.appendChild(document.createTextNode(data))
            
            let footer = document.createElement("footer")
            footer.appendChild(document.createTextNode('now'))
            
            message.appendChild(header)
            message.appendChild(p)
            message.appendChild(footer)
            
            let body = document.querySelector('.chat-body')
            body.append(message)
        })
        
        connection.start()
            .then(function () {
                document.getElementById("sendButton").disabled = false;
                connection.invoke('JoinRoom', '@Model.Name')
                    .then(res => {
                        console.log("RoomJoined", res);
                    })
                    .catch(function (err){
                        console.log(err)
                    })     
            })
            .catch(function (err) {
                console.log(err)
            });
        
        document.getElementById("sendButton").addEventListener("click", function (event) {
            event.preventDefault();
            let message = document.getElementById("message").value
            let roomName = document.getElementById("roomName").value
            let roomId = document.getElementById("roomId").value
            connection.invoke("SendMessage", message, roomName, roomId)
                .catch(function (err) {
                    console.log(err)
                });
        });
        /*var clickFunc = function(event) {
            var roomId = document.getElementById("roomId").value
            var message = document.getElementById("message").value
            var roomName = document.getElementById("roomName").value
            /!*alert(roomId)
            alert(message)
            alert(roomName)*!/
            connection.invoke("SendMessage", message)
                .catch(err => {
                    console.log("Failed to send message!",err)
                })
            event.preventDefault();
        }*/
        
    </script>
}